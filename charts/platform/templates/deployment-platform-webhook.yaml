{{- if .Values.platformWebhook.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: platform-webhook
spec:
  replicas: {{ default 1 .Values.platformWebhook.replicas }}
  selector:
    matchLabels:
      app: platform-webhook
  template:
    metadata:
      labels:
        app: platform-webhook
    spec:
      containers:
        - name: platform-webhook
          image: {{ default "" .Values.platformWebhook.repository }}:{{ coalesce .Values.platformWebhook.tag .Values.platform.version .Chart.AppVersion "latest" }}
          ports:
            - containerPort: {{ .Values.platformWebhook.port }}
          env:
            - name: GITHUB_OWNER
              value: {{ quote .Values.platformWebhook.env.GITHUB_OWNER }}
            - name: GITHUB_REPO
              value: {{ quote .Values.platformWebhook.env.GITHUB_REPO }}
            - name: REPO_DISPATCH_EVENT
              value: {{ quote .Values.platformWebhook.env.REPO_DISPATCH_EVENT }}
          {{- if .Values.platformWebhook.secret.enabled }}
          envFrom:
            - secretRef:
                name: {{ .Values.platformWebhook.secret.name }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.platformWebhook.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.platformWebhook.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: platform-webhook
spec:
  selector:
    app: platform-webhook
  ports:
    - port: 80
      targetPort: {{ .Values.platformWebhook.port }}
{{- end }}


