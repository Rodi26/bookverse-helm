name: Helm CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  package-platform-chart:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "[Setup] Checkout bookverse-infra for shared scripts"
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/bookverse-infra
          path: bookverse-infra
          token: ${{ github.token }}

      - name: Setup JFrog CLI
        # Temporary workaround: using forked action until upstream fix
        # uses: EyalDelarea/setup-jfrog-cli@swampUpAppTrust
        uses: EyalDelarea/setup-jfrog-cli@swampUpAppTrust
        env:
          JF_URL: ${{ vars.JFROG_URL }}
          JF_PROJECT: ${{ vars.PROJECT_KEY }}
          JFROG_CLI_BUILD_NAME: ${{ github.event.repository.name }}_${{ github.workflow }}_${{ github.job }}
          JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}-${{ github.run_attempt }}
        with:
          version: latest
          oidc-provider-name: bookverse-helm-github
          oidc-audience: ${{ vars.JFROG_URL }}
          disable-job-summary: true
          disable-auto-build-publish: true

      - name: Verify JFrog Authentication
        run: |
          echo "🔐 Verifying JFrog CLI authentication and connectivity..."
          jf rt ping
          echo "✅ JFrog authentication successful"

      - name: Setup Helm
        uses: azure/setup-helm@v4

      - name: Lint chart
        run: |
          helm lint charts/platform

      - name: Create dist directory
        run: mkdir -p dist

      - name: Package chart
        run: |
          helm package charts/platform --destination dist

      - name: Upload chart
        run: |
          jf rt u "dist/platform-*.tgz" "${{ vars.PROJECT_KEY }}-helm-internal-helm-nonprod-local/" --flat

      - name: "[Evidence] Generate Chart Compliance Evidence"
        env:
          SERVICE_NAME: helm-platform
          APPLICATION_KEY: bookverse-helm
          PROJECT_KEY: ${{ vars.PROJECT_KEY }}
          JFROG_URL: ${{ vars.JFROG_URL }}
        run: |
          echo "📋 Generating CI compliance evidence for Helm chart using shared patterns"
          
          # Create evidence directory
          mkdir -p evidence/ci-compliance
          
          # Generate CI validation evidence
          cat > evidence/ci-compliance/ci-validation.json << EOF
          {
            "workflow": "Helm CI",
            "chart_name": "platform",
            "lint_passed": true,
            "package_created": true,
            "upload_completed": true,
            "validation_timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "repository": "${{ github.repository }}",
            "commit_sha": "${{ github.sha }}",
            "workflow_run": "${{ github.run_id }}",
            "trigger": "${{ github.event_name }}"
          }
          EOF
          
          echo "✅ CI compliance evidence generated for Helm chart"
